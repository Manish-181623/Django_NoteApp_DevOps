version: '3.3'

services:
  backend:
    build: 
      context: .
    ports:
      - "8000:8000"
    volumes:
      - "./:/app"
     
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "7000:3000"
    depends_on:
      - backend
    networks:
      - app-network


  prometheus:
    image: prom/prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data:/data
      - ./config/alert_rules.yml:/etc/prometheus/alert_rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"


  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8090:8080"

  node_exporter:
    image: prom/node-exporter
    ports:
      - "9100:9100"
    volumes:
      - node_exporter_data:/prometheus
  
  alertmanager:
    image: prom/alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./config/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    networks:
      - app-network
    depends_on:
      - prometheus 

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
  node_exporter_data:
  grafana_data:
  data:
  

